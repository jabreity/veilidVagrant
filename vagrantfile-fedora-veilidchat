# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
 
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
 
  config.vm.define :fedoraVeilidChat do |fedoraVeilidChat|
    fedoraVeilidChat.vm.box = "generic/fedora38"
    fedoraVeilidChat.vm.provider :libvirt do |libvirt|
      libvirt.id_ssh_key_file = "/home/jason/projects/kali_remote/id_ssh.key"
      #libvirt.uri = "qemu+ssh://10.130.10.50/system"
      libvirt.host = '10.130.10.50'
      libvirt.connect_via_ssh = true
      libvirt.username = "jason"
      libvirt.password = ''
      libvirt.memory = 2048
      libvirt.cpus = 2
      #libvirt.nested = true
      #libvirt.graphics_port = 5901
      #libvirt.graphics_ip = '0.0.0.0'
      #libvirt.video_type = 'qxl', 'jabreity'
      # Required for virtiofs
      # libvirt.memorybacking :access, :mode => "shared"
    end
  end
 
  # Default false
  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true
 
  # Default true
  config.ssh.keep_alive = false
 
  # Default 300s
  config.vm.boot_timeout = 900

  config.vm.provision "file", source: "~/projects/gm-com-chain.pem", destination: "~/"

  
  config.vm.provision "shell", inline: <<-SHELL
    echo foo
    sudo cp /home/vagrant/gm-com-chain.pem /etc/pki/ca-trust/source/anchors/
    #sudo mv ~/gdroot-g2.pem /etc/pki/fwupd/
    #sudo update-ca-trust
    # Base requirements for installing X11
    #sudo dnf update -y
    #sudo dnf install -y git
    # Add desktop environment
    sudo dnf install -y xorg-x11-xauth
    sudo dnf install -y xclock
    sudo dnf install -y gnome-shell
    #sudo dnf install xorg-x11-apps
    sudo dnf install -y xorg*
    sudo dnf install -y @xfce-desktop-environment
    #sudo dnf install -y vscode

    sudo dnf install -y redhat-lsb
    sudo dnf install -y ninja-build
    sudo dnf install -y clang
    sudo dnf install -y gtk+
    sudo dnf install -y gtk3-devel
    sudo dnf install -y PackageKit-gtk3-module

    sudo sed -i '/#X11Forwarding no/s//X11Forwarding yes/' /etc/ssh/sshd_config
    sudo rm -rf /root/.Xauthority
    sudo rm -rf /root/.serverauth.*  
  SHELL
  
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    echo bar
    wget -q https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.16.5-stable.tar.xz
    tar --index-file=/dev/null -xf flutter_linux_3.16.5-stable.tar.xz
  SHELL

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    echo bas
    sudo pkg install -y git
    git clone https://gitlab.com/veilid/veilid.git
    git clone https://gitlab.com/veilid/veilidchat.git
    sudo mkdir /usr/local/veilidchat
    sudo chown vagrant:vagrant /usr/local/veilidchat/
    sudo chmod 744 /usr/local/veilidchat/
    ./veilid/dev-setup/install_linux_prerequisites.sh  || true
  SHELL
  
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    echo fooby
    echo export PATH="$HOME/flutter/bin:$PATH" >> ~/.bashrc
    echo export PATH="$HOME/.cargo/bin:$PATH" >> ~/.bashrc
    echo export PATH="$HOME/veilid/target/release:$PATH" >> ~/.bashrc
    echo export PATH="/usr/local/veilidchat:$PATH" >> ~/.bashrc
  SHELL
  
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    echo barby
    echo "N" | ./veilidchat/dev-setup/setup_linux.sh || true
    #sudo ./veilid/dev-setup/install_linux_prerequisites.sh
    #sudo apt-get install cargo -y
    #sudo apt-get install rustc -y
    #sudo apt-get install python3-pip -y
    #sudo -u vagrant curl https://sh.rustup.rs -sSf | sh -s -- -y
  SHELL

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    echo basby
    export PATH="$HOME/flutter/bin:$PATH"
    #sudo -u vagrant sed -i 's/debian\|/kali\|/' /home/vagrant/veilid/dev-setup/setup_linux.sh
    flutter precache
    flutter --disable-analytics
    #cd ~/veilid/
    #cargo build --release -p veilid-server
    #cargo build --release -p veilid-cli

  SHELL

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    echo basby
    echo # Login to host with "vagrant ssh"
    echo # Issue the following command:
    echo cd veilidchat; ./reset_run.sh 
    #cd ~/veilid/target/release 
    #nohup ./veilid-server &> /dev/null 2>&1 & disown
    
  SHELL

  config.vm.synced_folder ".", "/vagrant", type: "rsync",
    rsync__exclude: ".git/, ./vagrant"
  end
